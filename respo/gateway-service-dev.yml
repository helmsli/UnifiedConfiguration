spring:
  cloud:
    # 网关配置
    gateway:
      # 定义一些共同的filter，对所有路由都起作用
      default-filters:
        # 例如：定义一个共有前缀
        # - PrefixPath=/mypath
      # 定义具体的路由信息
      routes:
        # 这个路由的唯一id，不定义的话为一个uuid
      - id: msg-push
        # http请求为lb://前缀 + 服务id；ws请求为lb:ws://前缀 + 服务id；表示将请求负载到哪一个服务上
        uri: lb://cloud-msg-push
        # 表示这个路由的请求匹配规则，只有符合这个规则的请求才会走这个路由。为一个数组，每个规则之间为并且的关系
        predicates:
        - Path=/msgpush/**
        # 请求转发前的filter，为一个数组
        filters:
        # 表示去掉转发规则的前缀的部分数(只保留**部分)
        - StripPrefix=1
        # 配置这个路由执行的order
        # order: 1
      - id: api-test
        uri: lb://cloud-msg-push
        predicates:
        - Path=/apitest/**
        filters:
        - StripPrefix=1
        - name: Hystrix
          args:
            # 表示HystrixCommand代码的名称
            name: fallbackCommand
            # 表示触发断路由后的跳转请求url 
            fallbackUri: forward:/hystrixFallback
